name: RDP via Ngrok (Stable)

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest

    steps:
      - name: Enable RDP & set password
        run: |
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name fDenyTSConnections -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          net user runneradmin MySecureP@ssw0rd!

      - name: Download and install ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath ngrok
          Move-Item ngrok\ngrok.exe $env:USERPROFILE\ngrok.exe
          & "$env:USERPROFILE\ngrok.exe" authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"

      - name: Start ngrok tunnel and output address
        shell: powershell
        run: |
          Write-Host "`nüîå Starting ngrok...`n"
          $ngrok = Start-Process -FilePath "$env:USERPROFILE\ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow -RedirectStandardOutput "ngrok.log" -PassThru
          Start-Sleep -Seconds 10
          
          # Read and show ngrok output
          $output = Get-Content ngrok.log -Raw
          Write-Host "`nüîç ngrok output:`n$output"

          # Extract TCP address
          if ($output -match "tcp://[^\s]+") {
            $tcp = $matches[0] -replace "tcp://", ""
            Write-Host "`n‚úÖ RDP Address: $tcp"
            Write-Host "Username: runneradmin"
            Write-Host "Password: MySecureP@ssw0rd!"
          } else {
            throw "‚ùå ngrok did not start a tunnel. Check ngrok.log above."
          }
