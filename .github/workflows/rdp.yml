name: Enable RDP to Windows Runner

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    steps:
      - name: Download and extract ngrok
        run: |
          Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-windows-amd64.zip -OutFile ngrok.zip
          Expand-Archive ngrok.zip -DestinationPath ngrok
          Move-Item ngrok\ngrok.exe $env:USERPROFILE\ngrok.exe

      - name: Authenticate ngrok
        run: |
          $env:NGROK_AUTH_TOKEN = "${{ secrets.NGROK_AUTH_TOKEN }}"
          & "$env:USERPROFILE\ngrok.exe" authtoken $env:NGROK_AUTH_TOKEN

      - name: Enable RDP Access
        run: |
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

      - name: Start ngrok in background
        run: |
          Start-Job -ScriptBlock {
            & "$env:USERPROFILE\ngrok.exe" tcp 3389
          }
          Start-Sleep -Seconds 15

      - name: Wait for ngrok tunnel (retry logic)
        run: |
          $retries = 10
          $tunnel = $null
          for ($i = 0; $i -lt $retries; $i++) {
            try {
              $tunnel = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
              break
            } catch {
              Write-Host "Tunnel not ready yet, retrying in 5 seconds..."
              Start-Sleep -Seconds 5
            }
          }

          if (-not $tunnel) {
            throw "ngrok tunnel could not be retrieved after multiple attempts."
          }

          $tcpAddr = $tunnel.tunnels[0].public_url -replace "tcp://", ""
          Write-Host "`n✅ RDP Address: $tcpAddr"
          Write-Host "ℹ️ Username: runneradmin"
